#!/bin/bash
# Determines whether it is necessary to install sphinx-build, or whether to
# activate a virtualenv located in $ENV_PATH.

ENV_PATH="$1"
SPHINX_VERSION="$2"
USE_ENV='false'

# Activate virtualenv if present
if [[ ${SPHINX_DEV_MODE} == 'true' && -d "${ENV_PATH}" ]]; then
    . "${ENV_PATH}"/bin/activate
    USE_ENV='true'
fi

# Compare installed sphinx-build version (if present).
python -c "
import sys
min_version = tuple((int(num) for num in '${SPHINX_VERSION}'.split('.')))
cur_version_string = '$(sphinx-build --version | cut -d ' ' -f 3)'
try:
    cur_version = tuple((int(num) for num in cur_version_string.split('.')))
except ValueError:
    sys.exit(1)  # sphinx-build not installed.
if not cur_version or min_version > cur_version:
    sys.exit(1)  # sphinx-build version too old.
sys.exit(0)  # sphinx-build sufficient.
"

# Echo any required action: 'sphinx-install', 'sphinx-activate' or ''.
if [[ $? == 1 ]]; then
    echo 'sphinx-install'
    if [[ ${USE_ENV} == 'true' ]]; then
        # Existing virtualenv has too early a version of sphinx-build.
        rm -rf "${ENV_PATH}"
    fi
elif [[ ${USE_ENV} == 'true' ]]; then
    echo 'sphinx-activate'
fi
